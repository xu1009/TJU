###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.3.10338/W32 for 8051         16/May/2016  21:43:30 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  E:\work\zigbee\taobao\Èí¼ş×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-v3.6\Ñ #
#                          §Ï°Àı³ÌÒÔ¼°¿ª·¢»·¾³°²×°\5×éÍøÊµÑé\7.ÎÂÊª¶È´«¸ĞÆ÷DH #
#                          T11 -¶àÖÕ¶Ë²É¼¯\ZStack-CC2530-2.3.0-1.4.0\Projects #
#                          \zstack\Samples\SampleApp\Source\SampleApp.c       #
#    Command line       =  -f "E:\work\zigbee\taobao\Èí¼ş×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-v3 #
#                          .6\Ñ§Ï°Àı³ÌÒÔ¼°¿ª·¢»·¾³°²×°\5×éÍøÊµÑé\7.ÎÂÊª¶È´«¸Ğ #
#                          Æ÷DHT11 -¶àÖÕ¶Ë²É¼¯\ZStack-CC2530-2.3.0-1.4.0\Proj #
#                          ects\zstack\Samples\SampleApp\CC2530DB\..\..\..\To #
#                          ols\CC2530DB\f8wRouter.cfg" (-DCPU32MHZ            #
#                          -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRU #
#                          E -DRTR_NWK -DBLINK_LEDS) -f                       #
#                          "E:\work\zigbee\taobao\Èí¼ş×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-v3.6\ #
#                          Ñ§Ï°Àı³ÌÒÔ¼°¿ª·¢»·¾³°²×°\5×éÍøÊµÑé\7.ÎÂÊª¶È´«¸ĞÆ÷D #
#                          HT11 -¶àÖÕ¶Ë²É¼¯\ZStack-CC2530-2.3.0-1.4.0\Project #
#                          s\zstack\Samples\SampleApp\CC2530DB\..\..\..\Tools #
#                          \CC2530DB\f8wConfig.cfg" (-DSECURE=0               #
#                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                  #
#                          -DDEFAULT_CHANLIST=0x00000800                      #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFF1                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116 "-DCONST=const __code"    #
#                          -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE     #
#                          -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100            #
#                          -DRESPONSE_POLL_RATE=100) -DREJOIN_POLL_RATE=440   #
#                          "E:\work\zigbee\taobao\Èí¼ş×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-v3.6\ #
#                          Ñ§Ï°Àı³ÌÒÔ¼°¿ª·¢»·¾³°²×°\5×éÍøÊµÑé\7.ÎÂÊª¶È´«¸ĞÆ÷D #
#                          HT11 -¶àÖÕ¶Ë²É¼¯\ZStack-CC2530-2.3.0-1.4.0\Project #
#                          s\zstack\Samples\SampleApp\Source\SampleApp.c" -D  #
#                          ZIGBEEPRO -D ZTOOL_P1 -D MT_TASK -D MT_SYS_FUNC    #
#                          -D MT_ZDO_FUNC -D LCD_SUPPORTED=DEBUG -lC          #
#                          "E:\work\zigbee\taobao\Èí¼ş×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-v3.6\ #
#                          Ñ§Ï°Àı³ÌÒÔ¼°¿ª·¢»·¾³°²×°\5×éÍøÊµÑé\7.ÎÂÊª¶È´«¸ĞÆ÷D #
#                          HT11 -¶àÖÕ¶Ë²É¼¯\ZStack-CC2530-2.3.0-1.4.0\Project #
#                          s\zstack\Samples\SampleApp\CC2530DB\RouterEB-Pro\L #
#                          ist\" -lA "E:\work\zigbee\taobao\Èí¼ş×ÊÁÏ\ÌÔ±¦ËùÓÃ #
#                          ×ÊÁÏ-v3.6\Ñ§Ï°Àı³ÌÒÔ¼°¿ª·¢»·¾³°²×°\5×éÍøÊµÑé\7.ÎÂÊ #
#                          ª¶È´«¸ĞÆ÷DHT11 -¶àÖÕ¶Ë²É¼¯\ZStack-CC2530-2.3.0-1.4 #
#                          .0\Projects\zstack\Samples\SampleApp\CC2530DB\Rout #
#                          erEB-Pro\List\" --diag_suppress Pe001,Pa010 -o     #
#                          "E:\work\zigbee\taobao\Èí¼ş×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-v3.6\ #
#                          Ñ§Ï°Àı³ÌÒÔ¼°¿ª·¢»·¾³°²×°\5×éÍøÊµÑé\7.ÎÂÊª¶È´«¸ĞÆ÷D #
#                          HT11 -¶àÖÕ¶Ë²É¼¯\ZStack-CC2530-2.3.0-1.4.0\Project #
#                          s\zstack\Samples\SampleApp\CC2530DB\RouterEB-Pro\O #
#                          bj\" -e --debug --core=plain --dptr=16,1           #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I "E:\work\zigbee\taobao\Èí¼ş×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-v3 #
#                          .6\Ñ§Ï°Àı³ÌÒÔ¼°¿ª·¢»·¾³°²×°\5×éÍøÊµÑé\7.ÎÂÊª¶È´«¸Ğ #
#                          Æ÷DHT11 -¶àÖÕ¶Ë²É¼¯\ZStack-CC2530-2.3.0-1.4.0\Proj #
#                          ects\zstack\Samples\SampleApp\CC2530DB\" -I        #
#                          "E:\work\zigbee\taobao\Èí¼ş×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-v3.6\ #
#                          Ñ§Ï°Àı³ÌÒÔ¼°¿ª·¢»·¾³°²×°\5×éÍøÊµÑé\7.ÎÂÊª¶È´«¸ĞÆ÷D #
#                          HT11 -¶àÖÕ¶Ë²É¼¯\ZStack-CC2530-2.3.0-1.4.0\Project #
#                          s\zstack\Samples\SampleApp\CC2530DB\..\SOURCE\"    #
#                          -I "E:\work\zigbee\taobao\Èí¼ş×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-v3 #
#                          .6\Ñ§Ï°Àı³ÌÒÔ¼°¿ª·¢»·¾³°²×°\5×éÍøÊµÑé\7.ÎÂÊª¶È´«¸Ğ #
#                          Æ÷DHT11 -¶àÖÕ¶Ë²É¼¯\ZStack-CC2530-2.3.0-1.4.0\Proj #
#                          ects\zstack\Samples\SampleApp\CC2530DB\..\..\..\ZM #
#                          AIN\TI2530DB\" -I "E:\work\zigbee\taobao\Èí¼ş×ÊÁÏ\ #
#                          ÌÔ±¦ËùÓÃ×ÊÁÏ-v3.6\Ñ§Ï°Àı³ÌÒÔ¼°¿ª·¢»·¾³°²×°\5×éÍøÊµ #
#                          Ñé\7.ÎÂÊª¶È´«¸ĞÆ÷DHT11 -¶àÖÕ¶Ë²É¼¯\ZStack-CC2530-2 #
#                          .3.0-1.4.0\Projects\zstack\Samples\SampleApp\CC253 #
#                          0DB\..\..\..\..\..\COMPONENTS\MT\" -I              #
#                          "E:\work\zigbee\taobao\Èí¼ş×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-v3.6\ #
#                          Ñ§Ï°Àı³ÌÒÔ¼°¿ª·¢»·¾³°²×°\5×éÍøÊµÑé\7.ÎÂÊª¶È´«¸ĞÆ÷D #
#                          HT11 -¶àÖÕ¶Ë²É¼¯\ZStack-CC2530-2.3.0-1.4.0\Project #
#                          s\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\.. #
#                          \COMPONENTS\HAL\INCLUDE\" -I                       #
#                          "E:\work\zigbee\taobao\Èí¼ş×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-v3.6\ #
#                          Ñ§Ï°Àı³ÌÒÔ¼°¿ª·¢»·¾³°²×°\5×éÍøÊµÑé\7.ÎÂÊª¶È´«¸ĞÆ÷D #
#                          HT11 -¶àÖÕ¶Ë²É¼¯\ZStack-CC2530-2.3.0-1.4.0\Project #
#                          s\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\.. #
#                          \COMPONENTS\HAL\TARGET\CC2530EB\" -I               #
#                          "E:\work\zigbee\taobao\Èí¼ş×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-v3.6\ #
#                          Ñ§Ï°Àı³ÌÒÔ¼°¿ª·¢»·¾³°²×°\5×éÍøÊµÑé\7.ÎÂÊª¶È´«¸ĞÆ÷D #
#                          HT11 -¶àÖÕ¶Ë²É¼¯\ZStack-CC2530-2.3.0-1.4.0\Project #
#                          s\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\.. #
#                          \COMPONENTS\OSAL\MCU\CCSOC\" -I                    #
#                          "E:\work\zigbee\taobao\Èí¼ş×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-v3.6\ #
#                          Ñ§Ï°Àı³ÌÒÔ¼°¿ª·¢»·¾³°²×°\5×éÍøÊµÑé\7.ÎÂÊª¶È´«¸ĞÆ÷D #
#                          HT11 -¶àÖÕ¶Ë²É¼¯\ZStack-CC2530-2.3.0-1.4.0\Project #
#                          s\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\.. #
#                          \COMPONENTS\OSAL\INCLUDE\" -I                      #
#                          "E:\work\zigbee\taobao\Èí¼ş×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-v3.6\ #
#                          Ñ§Ï°Àı³ÌÒÔ¼°¿ª·¢»·¾³°²×°\5×éÍøÊµÑé\7.ÎÂÊª¶È´«¸ĞÆ÷D #
#                          HT11 -¶àÖÕ¶Ë²É¼¯\ZStack-CC2530-2.3.0-1.4.0\Project #
#                          s\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\.. #
#                          \COMPONENTS\STACK\AF\" -I                          #
#                          "E:\work\zigbee\taobao\Èí¼ş×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-v3.6\ #
#                          Ñ§Ï°Àı³ÌÒÔ¼°¿ª·¢»·¾³°²×°\5×éÍøÊµÑé\7.ÎÂÊª¶È´«¸ĞÆ÷D #
#                          HT11 -¶àÖÕ¶Ë²É¼¯\ZStack-CC2530-2.3.0-1.4.0\Project #
#                          s\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\.. #
#                          \COMPONENTS\STACK\NWK\" -I                         #
#                          "E:\work\zigbee\taobao\Èí¼ş×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-v3.6\ #
#                          Ñ§Ï°Àı³ÌÒÔ¼°¿ª·¢»·¾³°²×°\5×éÍøÊµÑé\7.ÎÂÊª¶È´«¸ĞÆ÷D #
#                          HT11 -¶àÖÕ¶Ë²É¼¯\ZStack-CC2530-2.3.0-1.4.0\Project #
#                          s\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\.. #
#                          \COMPONENTS\STACK\SEC\" -I                         #
#                          "E:\work\zigbee\taobao\Èí¼ş×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-v3.6\ #
#                          Ñ§Ï°Àı³ÌÒÔ¼°¿ª·¢»·¾³°²×°\5×éÍøÊµÑé\7.ÎÂÊª¶È´«¸ĞÆ÷D #
#                          HT11 -¶àÖÕ¶Ë²É¼¯\ZStack-CC2530-2.3.0-1.4.0\Project #
#                          s\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\.. #
#                          \COMPONENTS\STACK\SAPI\" -I                        #
#                          "E:\work\zigbee\taobao\Èí¼ş×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-v3.6\ #
#                          Ñ§Ï°Àı³ÌÒÔ¼°¿ª·¢»·¾³°²×°\5×éÍøÊµÑé\7.ÎÂÊª¶È´«¸ĞÆ÷D #
#                          HT11 -¶àÖÕ¶Ë²É¼¯\ZStack-CC2530-2.3.0-1.4.0\Project #
#                          s\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\.. #
#                          \COMPONENTS\STACK\SYS\" -I                         #
#                          "E:\work\zigbee\taobao\Èí¼ş×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-v3.6\ #
#                          Ñ§Ï°Àı³ÌÒÔ¼°¿ª·¢»·¾³°²×°\5×éÍøÊµÑé\7.ÎÂÊª¶È´«¸ĞÆ÷D #
#                          HT11 -¶àÖÕ¶Ë²É¼¯\ZStack-CC2530-2.3.0-1.4.0\Project #
#                          s\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\.. #
#                          \COMPONENTS\STACK\ZDO\" -I                         #
#                          "E:\work\zigbee\taobao\Èí¼ş×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-v3.6\ #
#                          Ñ§Ï°Àı³ÌÒÔ¼°¿ª·¢»·¾³°²×°\5×éÍøÊµÑé\7.ÎÂÊª¶È´«¸ĞÆ÷D #
#                          HT11 -¶àÖÕ¶Ë²É¼¯\ZStack-CC2530-2.3.0-1.4.0\Project #
#                          s\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\.. #
#                          \COMPONENTS\ZMAC\F8W\" -I                          #
#                          "E:\work\zigbee\taobao\Èí¼ş×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-v3.6\ #
#                          Ñ§Ï°Àı³ÌÒÔ¼°¿ª·¢»·¾³°²×°\5×éÍøÊµÑé\7.ÎÂÊª¶È´«¸ĞÆ÷D #
#                          HT11 -¶àÖÕ¶Ë²É¼¯\ZStack-CC2530-2.3.0-1.4.0\Project #
#                          s\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\.. #
#                          \COMPONENTS\ZMAC\" -I "E:\work\zigbee\taobao\Èí¼ş× #
#                          ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-v3.6\Ñ§Ï°Àı³ÌÒÔ¼°¿ª·¢»·¾³°²×°\5×é #
#                          ÍøÊµÑé\7.ÎÂÊª¶È´«¸ĞÆ÷DHT11                         #
#                          -¶àÖÕ¶Ë²É¼¯\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\SampleApp\CC2530DB\..\..\..\..\..\COMP #
#                          ONENTS\SERVICES\SADDR\" -I                         #
#                          "E:\work\zigbee\taobao\Èí¼ş×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-v3.6\ #
#                          Ñ§Ï°Àı³ÌÒÔ¼°¿ª·¢»·¾³°²×°\5×éÍøÊµÑé\7.ÎÂÊª¶È´«¸ĞÆ÷D #
#                          HT11 -¶àÖÕ¶Ë²É¼¯\ZStack-CC2530-2.3.0-1.4.0\Project #
#                          s\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\.. #
#                          \COMPONENTS\SERVICES\SDATA\" -I                    #
#                          "E:\work\zigbee\taobao\Èí¼ş×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-v3.6\ #
#                          Ñ§Ï°Àı³ÌÒÔ¼°¿ª·¢»·¾³°²×°\5×éÍøÊµÑé\7.ÎÂÊª¶È´«¸ĞÆ÷D #
#                          HT11 -¶àÖÕ¶Ë²É¼¯\ZStack-CC2530-2.3.0-1.4.0\Project #
#                          s\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\.. #
#                          \COMPONENTS\MAC\INCLUDE\" -I                       #
#                          "E:\work\zigbee\taobao\Èí¼ş×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-v3.6\ #
#                          Ñ§Ï°Àı³ÌÒÔ¼°¿ª·¢»·¾³°²×°\5×éÍøÊµÑé\7.ÎÂÊª¶È´«¸ĞÆ÷D #
#                          HT11 -¶àÖÕ¶Ë²É¼¯\ZStack-CC2530-2.3.0-1.4.0\Project #
#                          s\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\.. #
#                          \COMPONENTS\MAC\HIGH_LEVEL\" -I                    #
#                          "E:\work\zigbee\taobao\Èí¼ş×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-v3.6\ #
#                          Ñ§Ï°Àı³ÌÒÔ¼°¿ª·¢»·¾³°²×°\5×éÍøÊµÑé\7.ÎÂÊª¶È´«¸ĞÆ÷D #
#                          HT11 -¶àÖÕ¶Ë²É¼¯\ZStack-CC2530-2.3.0-1.4.0\Project #
#                          s\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\.. #
#                          \COMPONENTS\MAC\LOW_LEVEL\srf04\" -I               #
#                          "E:\work\zigbee\taobao\Èí¼ş×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-v3.6\ #
#                          Ñ§Ï°Àı³ÌÒÔ¼°¿ª·¢»·¾³°²×°\5×éÍøÊµÑé\7.ÎÂÊª¶È´«¸ĞÆ÷D #
#                          HT11 -¶àÖÕ¶Ë²É¼¯\ZStack-CC2530-2.3.0-1.4.0\Project #
#                          s\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\.. #
#                          \COMPONENTS\MAC\LOW_LEVEL\srf04\SINGLE_CHIP\" -Ohz #
#    List file          =  E:\work\zigbee\taobao\Èí¼ş×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-v3.6\Ñ #
#                          §Ï°Àı³ÌÒÔ¼°¿ª·¢»·¾³°²×°\5×éÍøÊµÑé\7.ÎÂÊª¶È´«¸ĞÆ÷DH #
#                          T11 -¶àÖÕ¶Ë²É¼¯\ZStack-CC2530-2.3.0-1.4.0\Projects #
#                          \zstack\Samples\SampleApp\CC2530DB\RouterEB-Pro\Li #
#                          st\SampleApp.lst                                   #
#    Object file        =  E:\work\zigbee\taobao\Èí¼ş×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-v3.6\Ñ #
#                          §Ï°Àı³ÌÒÔ¼°¿ª·¢»·¾³°²×°\5×éÍøÊµÑé\7.ÎÂÊª¶È´«¸ĞÆ÷DH #
#                          T11 -¶àÖÕ¶Ë²É¼¯\ZStack-CC2530-2.3.0-1.4.0\Projects #
#                          \zstack\Samples\SampleApp\CC2530DB\RouterEB-Pro\Ob #
#                          j\SampleApp.r51                                    #
#                                                                             #
#                                                                             #
###############################################################################

E:\work\zigbee\taobao\Èí¼ş×ÊÁÏ\ÌÔ±¦ËùÓÃ×ÊÁÏ-v3.6\Ñ§Ï°Àı³ÌÒÔ¼°¿ª·¢»·¾³°²×°\5×éÍøÊµÑé\7.ÎÂÊª¶È´«¸ĞÆ÷DHT11 -¶àÖÕ¶Ë²É¼¯\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\SampleApp\Source\SampleApp.c
      1          /**************************************************************************************************
      2            Filename:       SampleApp.c
      3            Revised:        $Date: 2009-03-18 15:56:27 -0700 (Wed, 18 Mar 2009) $
      4            Revision:       $Revision: 19453 $
      5          
      6            Description:    Sample Application (no Profile).
      7          
      8          
      9            Copyright 2007 Texas Instruments Incorporated. All rights reserved.
     10          
     11            IMPORTANT: Your use of this Software is limited to those specific rights
     12            granted under the terms of a software license agreement between the user
     13            who downloaded the software, his/her employer (which must be your employer)
     14            and Texas Instruments Incorporated (the "License").  You may not use this
     15            Software unless you agree to abide by the terms of the License. The License
     16            limits your use, and you acknowledge, that the Software may not be modified,
     17            copied or distributed unless embedded on a Texas Instruments microcontroller
     18            or used solely and exclusively in conjunction with a Texas Instruments radio
     19            frequency transceiver, which is integrated into your product.  Other than for
     20            the foregoing purpose, you may not use, reproduce, copy, prepare derivative
     21            works of, modify, distribute, perform, display or sell this Software and/or
     22            its documentation for any purpose.
     23          
     24            YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
     25            PROVIDED AS IS?WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
     26            INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
     27            NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
     28            TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
     29            NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
     30            LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
     31            INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
     32            OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
     33            OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
     34            (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
     35          
     36            Should you have any questions regarding your right to use this Software,
     37            contact Texas Instruments Incorporated at www.TI.com.
     38          **************************************************************************************************/
     39          
     40          /*********************************************************************
     41            This application isn't intended to do anything useful, it is
     42            intended to be a simple example of an application's structure.
     43          
     44            This application sends it's messages either as broadcast or
     45            broadcast filtered group messages.  The other (more normal)
     46            message addressing is unicast.  Most of the other sample
     47            applications are written to support the unicast message model.
     48          
     49            Key control:
     50              SW1:  Sends a flash command to all devices in Group 1.
     51              SW2:  Adds/Removes (toggles) this device in and out
     52                    of Group 1.  This will enable and disable the
     53                    reception of the flash command.
     54          *********************************************************************/
     55          
     56          /*********************************************************************
     57           * INCLUDES
     58           */
     59          #include "OSAL.h"
     60          #include "ZGlobals.h"
     61          #include "AF.h"
     62          #include "aps_groups.h"
     63          #include "ZDApp.h"
     64          
     65          #include "SampleApp.h"
     66          #include "SampleAppHw.h"
     67          
     68          #include "OnBoard.h"

   \                                 In  segment SFR_AN, at 0x80
   \   union <unnamed> volatile __sfr _A_P0
   \                     _A_P0:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf3
   \   unsigned char volatile __sfr P0SEL
   \                     P0SEL:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xfd
   \   unsigned char volatile __sfr P0DIR
   \                     P0DIR:
   \   000000                DS 1
     69          
     70          /* HAL */
     71          #include "hal_lcd.h"
     72          #include "hal_led.h"
     73          #include "hal_key.h"
     74          #include "MT_UART.h"
     75          #include "MT_APP.h"
     76          #include "MT.h"
     77          #include "DHT11.h"
     78          #include "stdio.h"
     79          
     80          
     81          /*********************************************************************
     82           * MACROS
     83           */
     84          
     85          /*********************************************************************
     86           * CONSTANTS
     87           */
     88          
     89          /*********************************************************************
     90           * TYPEDEFS
     91           */
     92          
     93          /*********************************************************************
     94           * GLOBAL VARIABLES
     95           */
     96          
     97          // This list should be filled with Application specific Cluster IDs.

   \                                 In  segment XDATA_ROM_C, align 1
     98          const cId_t SampleApp_ClusterList[SAMPLEAPP_MAX_CLUSTERS] =
   \                     SampleApp_ClusterList:
   \   000000   0100         DW 1
   \   000002   0200         DW 2
     99          {
    100            SAMPLEAPP_PERIODIC_CLUSTERID,
    101            SAMPLEAPP_FLASH_CLUSTERID
    102          };
    103          

   \                                 In  segment XDATA_ROM_C, align 1
    104          const SimpleDescriptionFormat_t SampleApp_SimpleDesc =
   \                     SampleApp_SimpleDesc:
   \   000000   14           DB 20
   \   000001   080F         DW 3848
   \   000003   0100         DW 1
   \   000005   00           DB 0
   \   000006   02           DB 2
   \   000007   ....         DW SampleApp_ClusterList
   \   000009   02           DB 2
   \   00000A   ....         DW SampleApp_ClusterList
    105          {
    106            SAMPLEAPP_ENDPOINT,              //  int Endpoint;
    107            SAMPLEAPP_PROFID,                //  uint16 AppProfId[2];
    108            SAMPLEAPP_DEVICEID,              //  uint16 AppDeviceId[2];
    109            SAMPLEAPP_DEVICE_VERSION,        //  int   AppDevVer:4;
    110            SAMPLEAPP_FLAGS,                 //  int   AppFlags:4;
    111            SAMPLEAPP_MAX_CLUSTERS,          //  uint8  AppNumInClusters;
    112            (cId_t *)SampleApp_ClusterList,  //  uint8 *pAppInClusterList;
    113            SAMPLEAPP_MAX_CLUSTERS,          //  uint8  AppNumInClusters;
    114            (cId_t *)SampleApp_ClusterList   //  uint8 *pAppInClusterList;
    115          };
    116          
    117          // This is the Endpoint/Interface description.  It is defined here, but
    118          // filled-in in SampleApp_Init().  Another way to go would be to fill
    119          // in the structure here and make it a "const" (in code space).  The
    120          // way it's defined in this sample app it is define in RAM.

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    121          endPointDesc_t SampleApp_epDesc;
   \                     SampleApp_epDesc:
   \   000000                DS 6
   \   000006                REQUIRE __INIT_XDATA_Z
    122          
    123          /*********************************************************************
    124           * EXTERNAL VARIABLES
    125           */
    126          
    127          /*********************************************************************
    128           * EXTERNAL FUNCTIONS
    129           */
    130          
    131          /*********************************************************************
    132           * LOCAL VARIABLES
    133           */

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    134          uint8 SampleApp_TaskID;   // Task ID for internal task/event processing
   \                     SampleApp_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    135                                    // This variable will be received when
    136                                    // SampleApp_Init() is called.

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    137          devStates_t SampleApp_NwkState;
   \                     SampleApp_NwkState:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    138          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    139          uint8 SampleApp_TransID;  // This is the unique message ID (counter)
   \                     SampleApp_TransID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    140          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    141          afAddrType_t SampleApp_Periodic_DstAddr; //¹ã²¥
   \                     SampleApp_Periodic_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    142          afAddrType_t SampleApp_Flash_DstAddr;    //×é²¥
   \                     SampleApp_Flash_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    143          afAddrType_t SampleApp_P2P_DstAddr;      //µã²¥
   \                     SampleApp_P2P_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z
    144          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    145          aps_Group_t SampleApp_Group;
   \                     SampleApp_Group:
   \   000000                DS 18
   \   000012                REQUIRE __INIT_XDATA_Z
    146          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    147          uint8 SampleAppPeriodicCounter = 0;
   \                     SampleAppPeriodicCounter:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    148          uint8 SampleAppFlashCounter = 0;
   \                     SampleAppFlashCounter:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    149          
    150          //´ËIDÎª²»Í¬ÖÕ¶ËµÄID£¬
    151          //·Ö±ğÎª1£¬2£¬3£¬¶ÔÓ¦3¸öÖÕ¶Ë

   \                                 In  segment XDATA_I, align 1, keep-with-next
    152          uint8 deviceID=1;
   \                     deviceID:
   \   000000                DS 1
   \   000001                REQUIRE `?<Initializer for deviceID>`
   \   000001                REQUIRE __INIT_XDATA_I
    153          
    154          //ÎÂ¶È±¨¾¯Öµ
    155          //³¬¹ıÕâ¸öÖµ·äÃùÆ÷±¨¾¯

   \                                 In  segment XDATA_I, align 1, keep-with-next
    156          uint8 tempLimit=35;
   \                     tempLimit:
   \   000000                DS 1
   \   000001                REQUIRE `?<Initializer for tempLimit>`
   \   000001                REQUIRE __INIT_XDATA_I
    157          
    158          //Êª¶È±¨¾¯
    159          //Ğ¡ÓÚÕâ¸öÖµ·äÃùÆ÷±¨¾¯

   \                                 In  segment XDATA_I, align 1, keep-with-next
    160          uint8 humLimit=50;
   \                     humLimit:
   \   000000                DS 1
   \   000001                REQUIRE `?<Initializer for humLimit>`
   \   000001                REQUIRE __INIT_XDATA_I
    161          
    162          /*********************************************************************
    163           * LOCAL FUNCTIONS
    164           */
    165          void SampleApp_HandleKeys( uint8 shift, uint8 keys );
    166          void SampleApp_MessageMSGCB( afIncomingMSGPacket_t *pckt );
    167          void SampleApp_SendPeriodicMessage( void );
    168          void SampleApp_SendFlashMessage( uint16 flashTime );
    169          void SampleApp_Send_P2P_Message(void);
    170          void SetBuzzer(uint8 on);
    171          /*********************************************************************
    172           * NETWORK LAYER CALLBACKS
    173           */
    174          
    175          /*********************************************************************
    176           * PUBLIC FUNCTIONS
    177           */
    178          
    179          /*********************************************************************
    180           * @fn      SampleApp_Init
    181           *
    182           * @brief   Initialization function for the Generic App Task.
    183           *          This is called during initialization and should contain
    184           *          any application specific initialization (ie. hardware
    185           *          initialization/setup, table initialization, power up
    186           *          notificaiton ... ).
    187           *
    188           * @param   task_id - the ID assigned by OSAL.  This ID should be
    189           *                    used to send messages and set timers.
    190           *
    191           * @return  none
    192           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    193          void SampleApp_Init( uint8 task_id )
   \                     SampleApp_Init:
    194          { 
   \   000000   74F5         MOV     A,#-0xb
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 11
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
    195            SampleApp_TaskID = task_id;
   \   000007   90....       MOV     DPTR,#SampleApp_TaskID
   \   00000A   F0           MOVX    @DPTR,A
    196            SampleApp_NwkState = DEV_INIT;
   \   00000B   90....       MOV     DPTR,#SampleApp_NwkState
   \   00000E   7401         MOV     A,#0x1
   \   000010   F0           MOVX    @DPTR,A
    197            SampleApp_TransID = 0;
   \   000011   90....       MOV     DPTR,#SampleApp_TransID
   \   000014   E4           CLR     A
   \   000015   F0           MOVX    @DPTR,A
    198            
    199            MT_UartInit();                  //´®¿Ú³õÊ¼»¯
   \   000016                ; Setup parameters for call to function MT_UartInit
   \   000016   12....       LCALL   ??MT_UartInit?relay
    200            MT_UartRegisterTaskID(task_id); //×¢²á´®¿ÚÈÎÎñ
   \   000019                ; Setup parameters for call to function MT_UartRegisterTaskID
   \   000019   EE           MOV     A,R6
   \   00001A   F9           MOV     R1,A
   \   00001B   12....       LCALL   ??MT_UartRegisterTaskID?relay
    201          
    202            //Ğ­µ÷Æ÷ÉÏ½ÓÓĞÒ»¸ö·äÃùÆ÷  
    203            P0SEL &= ~0x80;                  //ÉèÖÃP0.7¿ÚÎªÆÕÍ¨IO
   \   00001E   53F37F       ANL     0xf3,#0x7f
    204            P0DIR |= 0x80;                  //ÉèÖÃP0.7ÎªÊä³ö
   \   000021   43FD80       ORL     0xfd,#0x80
    205            SetBuzzer(0);
   \   000024                ; Setup parameters for call to function SetBuzzer
   \   000024   7900         MOV     R1,#0x0
   \   000026   12....       LCALL   ??SetBuzzer?relay
    206            
    207            // Device hardware initialization can be added here or in main() (Zmain.c).
    208            // If the hardware is application specific - add it here.
    209            // If the hardware is other parts of the device add it in main().
    210          
    211           #if defined ( BUILD_ALL_DEVICES )
    212            // The "Demo" target is setup to have BUILD_ALL_DEVICES and HOLD_AUTO_START
    213            // We are looking at a jumper (defined in SampleAppHw.c) to be jumpered
    214            // together - if they are - we will start up a coordinator. Otherwise,
    215            // the device will start as a router.
    216            if ( readCoordinatorJumper() )
    217              zgDeviceLogicalType = ZG_DEVICETYPE_COORDINATOR;
    218            else
    219              zgDeviceLogicalType = ZG_DEVICETYPE_ROUTER;
    220          #endif // BUILD_ALL_DEVICES
    221          
    222          #if defined ( HOLD_AUTO_START )
    223            // HOLD_AUTO_START is a compile option that will surpress ZDApp
    224            //  from starting the device and wait for the application to
    225            //  start the device.
    226            ZDOInitDevice(0);
    227          #endif
    228          
    229            // Setup for the periodic message's destination address
    230            // Broadcast to everyone
    231            SampleApp_Periodic_DstAddr.addrMode = (afAddrMode_t)AddrBroadcast;
   \   000029   90....       MOV     DPTR,#SampleApp_Periodic_DstAddr + 8
   \   00002C   740F         MOV     A,#0xf
   \   00002E   F0           MOVX    @DPTR,A
    232            SampleApp_Periodic_DstAddr.endPoint = SAMPLEAPP_ENDPOINT;
   \   00002F   A3           INC     DPTR
   \   000030   7414         MOV     A,#0x14
   \   000032   F0           MOVX    @DPTR,A
    233            SampleApp_Periodic_DstAddr.addr.shortAddr = 0xFFFF;
   \   000033   90....       MOV     DPTR,#SampleApp_Periodic_DstAddr
   \   000036   74FF         MOV     A,#-0x1
   \   000038   F0           MOVX    @DPTR,A
   \   000039   A3           INC     DPTR
   \   00003A   F0           MOVX    @DPTR,A
    234          
    235            // Setup for the flash command's destination address - Group 1
    236            SampleApp_Flash_DstAddr.addrMode = (afAddrMode_t)afAddrGroup;
   \   00003B   90....       MOV     DPTR,#SampleApp_Flash_DstAddr + 8
   \   00003E   7401         MOV     A,#0x1
   \   000040   F0           MOVX    @DPTR,A
    237            SampleApp_Flash_DstAddr.endPoint = SAMPLEAPP_ENDPOINT;
   \   000041   A3           INC     DPTR
   \   000042   7414         MOV     A,#0x14
   \   000044   F0           MOVX    @DPTR,A
    238            SampleApp_Flash_DstAddr.addr.shortAddr = SAMPLEAPP_FLASH_GROUP;
   \   000045   90....       MOV     DPTR,#SampleApp_Flash_DstAddr
   \   000048   7401         MOV     A,#0x1
   \   00004A   F0           MOVX    @DPTR,A
   \   00004B   A3           INC     DPTR
   \   00004C   E4           CLR     A
   \   00004D   F0           MOVX    @DPTR,A
    239            
    240            SampleApp_P2P_DstAddr.addrMode = (afAddrMode_t)Addr16Bit; //µã²¥ 
   \   00004E   90....       MOV     DPTR,#SampleApp_P2P_DstAddr + 8
   \   000051   7402         MOV     A,#0x2
   \   000053   F0           MOVX    @DPTR,A
    241            SampleApp_P2P_DstAddr.endPoint = SAMPLEAPP_ENDPOINT; 
   \   000054   A3           INC     DPTR
   \   000055   7414         MOV     A,#0x14
   \   000057   F0           MOVX    @DPTR,A
    242            SampleApp_P2P_DstAddr.addr.shortAddr = 0x0000;            //·¢¸øĞ­µ÷Æ÷
   \   000058   90....       MOV     DPTR,#SampleApp_P2P_DstAddr
   \   00005B   E4           CLR     A
   \   00005C   F0           MOVX    @DPTR,A
   \   00005D   A3           INC     DPTR
   \   00005E   F0           MOVX    @DPTR,A
    243          
    244            // Fill out the endpoint description.
    245            SampleApp_epDesc.endPoint = SAMPLEAPP_ENDPOINT;
   \   00005F   90....       MOV     DPTR,#SampleApp_epDesc
   \   000062   7414         MOV     A,#0x14
   \   000064   F0           MOVX    @DPTR,A
    246            SampleApp_epDesc.task_id = &SampleApp_TaskID;
   \   000065   A3           INC     DPTR
   \   000066   74..         MOV     A,#SampleApp_TaskID & 0xff
   \   000068   F0           MOVX    @DPTR,A
   \   000069   A3           INC     DPTR
   \   00006A   74..         MOV     A,#(SampleApp_TaskID >> 8) & 0xff
   \   00006C   F0           MOVX    @DPTR,A
    247            SampleApp_epDesc.simpleDesc
    248                      = (SimpleDescriptionFormat_t *)&SampleApp_SimpleDesc;
   \   00006D   A3           INC     DPTR
   \   00006E   74..         MOV     A,#SampleApp_SimpleDesc & 0xff
   \   000070   F0           MOVX    @DPTR,A
   \   000071   A3           INC     DPTR
   \   000072   74..         MOV     A,#(SampleApp_SimpleDesc >> 8) & 0xff
   \   000074   F0           MOVX    @DPTR,A
    249            SampleApp_epDesc.latencyReq = noLatencyReqs;
   \   000075   A3           INC     DPTR
   \   000076   E4           CLR     A
   \   000077   F0           MOVX    @DPTR,A
    250          
    251            // Register the endpoint description with the AF
    252            afRegister( &SampleApp_epDesc );
   \   000078                ; Setup parameters for call to function afRegister
   \   000078   7A..         MOV     R2,#SampleApp_epDesc & 0xff
   \   00007A   7B..         MOV     R3,#(SampleApp_epDesc >> 8) & 0xff
   \   00007C   12....       LCALL   ??afRegister?relay
    253          
    254            // Register for all key events - This app will handle all key events
    255            RegisterForKeys( SampleApp_TaskID );
   \   00007F                ; Setup parameters for call to function RegisterForKeys
   \   00007F   90....       MOV     DPTR,#SampleApp_TaskID
   \   000082   E0           MOVX    A,@DPTR
   \   000083   F9           MOV     R1,A
   \   000084   12....       LCALL   ??RegisterForKeys?relay
    256          
    257            // By default, all devices start out in Group 1
    258            SampleApp_Group.ID = 0x0001;
   \   000087   90....       MOV     DPTR,#SampleApp_Group
   \   00008A   7401         MOV     A,#0x1
   \   00008C   F0           MOVX    @DPTR,A
   \   00008D   A3           INC     DPTR
   \   00008E   E4           CLR     A
   \   00008F   F0           MOVX    @DPTR,A
    259            osal_memcpy( SampleApp_Group.name, "Group 1", 7 );
   \   000090                ; Setup parameters for call to function osal_memcpy
   \   000090   75....       MOV     ?V0 + 0,#`?<Constant "Group 1">` & 0xff
   \   000093   75....       MOV     ?V0 + 1,#(`?<Constant "Group 1">` >> 8) & 0xff
   \   000096   F5..         MOV     ?V0 + 2,A
   \   000098   78..         MOV     R0,#?V0 + 0
   \   00009A   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   00009D   7C07         MOV     R4,#0x7
   \   00009F   7D00         MOV     R5,#0x0
   \   0000A1   7A..         MOV     R2,#(SampleApp_Group + 2) & 0xff
   \   0000A3   7B..         MOV     R3,#((SampleApp_Group + 2) >> 8) & 0xff
   \   0000A5   12....       LCALL   ??osal_memcpy?relay
   \   0000A8   7403         MOV     A,#0x3
   \   0000AA   12....       LCALL   ?DEALLOC_XSTACK8
    260            aps_AddGroup( SAMPLEAPP_ENDPOINT, &SampleApp_Group );
   \   0000AD                ; Setup parameters for call to function aps_AddGroup
   \   0000AD   7A..         MOV     R2,#SampleApp_Group & 0xff
   \   0000AF   7B..         MOV     R3,#(SampleApp_Group >> 8) & 0xff
   \   0000B1   7914         MOV     R1,#0x14
   \   0000B3   12....       LCALL   ??aps_AddGroup?relay
    261          
    262          #if defined ( LCD_SUPPORTED )
    263            HalLcdWriteString( "SampleApp", HAL_LCD_LINE_1 );
   \   0000B6                ; Setup parameters for call to function HalLcdWriteString
   \   0000B6   7901         MOV     R1,#0x1
   \   0000B8   7A..         MOV     R2,#`?<Constant "SampleApp">` & 0xff
   \   0000BA   7B..         MOV     R3,#(`?<Constant "SampleApp">` >> 8) & 0xff
   \   0000BC   12....       LCALL   ??HalLcdWriteString?relay
    264          #endif
    265          }
   \   0000BF   7F03         MOV     R7,#0x3
   \   0000C1   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   0000C4                REQUIRE P0SEL
   \   0000C4                REQUIRE P0DIR
    266          
    267          /*********************************************************************
    268           * @fn      SampleApp_ProcessEvent
    269           *
    270           * @brief   Generic Application Task event processor.  This function
    271           *          is called to process all events for the task.  Events
    272           *          include timers, messages and any other user defined events.
    273           *
    274           * @param   task_id  - The OSAL assigned task ID.
    275           * @param   events - events to process.  This is a bit map and can
    276           *                   contain more than one event.
    277           *
    278           * @return  none
    279           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    280          uint16 SampleApp_ProcessEvent( uint8 task_id, uint16 events )
   \                     SampleApp_ProcessEvent:
    281          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    282            afIncomingMSGPacket_t *MSGpkt;
    283            (void)task_id;  // Intentionally unreferenced parameter
    284          
    285            if ( events & SYS_EVENT_MSG )
   \   000009   5480         ANL     A,#0x80
   \   00000B   6074         JZ      ??SampleApp_ProcessEvent_0
    286            {
    287              MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( SampleApp_TaskID );
   \   00000D                ; Setup parameters for call to function osal_msg_receive
   \   00000D   8026         SJMP    ??SampleApp_ProcessEvent_1
    288              while ( MSGpkt )
    289              {
    290                switch ( MSGpkt->hdr.event )
    291                {
    292                  // Received when a key is pressed
    293                  case KEY_CHANGE:
    294                    SampleApp_HandleKeys( ((keyChange_t *)MSGpkt)->state, ((keyChange_t *)MSGpkt)->keys );
    295                    break;
    296          
    297                  // Received when a messages is received (OTA) for this endpoint
    298                  case AF_INCOMING_MSG_CMD:
    299                    SampleApp_MessageMSGCB( MSGpkt );
    300                    break;
    301          
    302                  // Received whenever the device changes state in the network
    303                  case ZDO_STATE_CHANGE:
    304                    SampleApp_NwkState = (devStates_t)(MSGpkt->hdr.status);
   \                     ??SampleApp_ProcessEvent_2:
   \   00000F   A3           INC     DPTR
   \   000010   E0           MOVX    A,@DPTR
   \   000011   90....       MOV     DPTR,#SampleApp_NwkState
   \   000014   F0           MOVX    @DPTR,A
    305                    if ( //(SampleApp_NwkState == DEV_ZB_COORD) ||
    306                           (SampleApp_NwkState == DEV_ROUTER)
    307                        || (SampleApp_NwkState == DEV_END_DEVICE) )
   \   000015   6407         XRL     A,#0x7
   \   000017   6005         JZ      ??SampleApp_ProcessEvent_3
   \   000019   E0           MOVX    A,@DPTR
   \   00001A   6406         XRL     A,#0x6
   \   00001C   7010         JNZ     ??SampleApp_ProcessEvent_4
    308                    {
    309                      // Start sending the periodic message in a regular interval.
    310                      osal_start_timerEx( SampleApp_TaskID,
    311                                        SAMPLEAPP_SEND_PERIODIC_MSG_EVT,
    312                                        SAMPLEAPP_SEND_PERIODIC_MSG_TIMEOUT );
   \                     ??SampleApp_ProcessEvent_3:
   \   00001E                ; Setup parameters for call to function osal_start_timerEx
   \   00001E   7CB8         MOV     R4,#-0x48
   \   000020   7D0B         MOV     R5,#0xb
   \   000022   7A01         MOV     R2,#0x1
   \   000024   7B00         MOV     R3,#0x0
   \   000026   90....       MOV     DPTR,#SampleApp_TaskID
   \   000029   E0           MOVX    A,@DPTR
   \   00002A   F9           MOV     R1,A
   \   00002B   12....       LCALL   ??osal_start_timerEx?relay
    313                    }
    314                    else
    315                    {
    316                      // Device is no longer in the network
    317                    }
    318                    break;
    319          
    320                  default:
    321                    break;
    322                }
    323          
    324                // Release the memory
    325                osal_msg_deallocate( (uint8 *)MSGpkt );
   \                     ??SampleApp_ProcessEvent_4:
   \   00002E                ; Setup parameters for call to function osal_msg_deallocate
   \   00002E   AA..         MOV     R2,?V0 + 0
   \   000030   AB..         MOV     R3,?V0 + 1
   \   000032   12....       LCALL   ??osal_msg_deallocate?relay
    326          
    327                // Next - if one is available
    328                MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( SampleApp_TaskID );
   \   000035                ; Setup parameters for call to function osal_msg_receive
   \                     ??SampleApp_ProcessEvent_1:
   \   000035   90....       MOV     DPTR,#SampleApp_TaskID
   \   000038   E0           MOVX    A,@DPTR
   \   000039   F9           MOV     R1,A
   \   00003A   12....       LCALL   ??osal_msg_receive?relay
   \   00003D   8A..         MOV     ?V0 + 0,R2
   \   00003F   8B..         MOV     ?V0 + 1,R3
   \   000041   E5..         MOV     A,?V0 + 0
   \   000043   45..         ORL     A,?V0 + 1
   \   000045   6032         JZ      ??SampleApp_ProcessEvent_5
   \   000047   85..82       MOV     DPL,?V0 + 0
   \   00004A   85..83       MOV     DPH,?V0 + 1
   \   00004D   E0           MOVX    A,@DPTR
   \   00004E   24E6         ADD     A,#-0x1a
   \   000050   601E         JZ      ??SampleApp_ProcessEvent_6
   \   000052   245A         ADD     A,#0x5a
   \   000054   6006         JZ      ??SampleApp_ProcessEvent_7
   \   000056   24EF         ADD     A,#-0x11
   \   000058   60B5         JZ      ??SampleApp_ProcessEvent_2
   \   00005A   80D2         SJMP    ??SampleApp_ProcessEvent_4
   \                     ??SampleApp_ProcessEvent_7:
   \   00005C                ; Setup parameters for call to function SampleApp_HandleKeys
   \   00005C   A3           INC     DPTR
   \   00005D   A3           INC     DPTR
   \   00005E   A3           INC     DPTR
   \   00005F   E0           MOVX    A,@DPTR
   \   000060   FA           MOV     R2,A
   \   000061   85..82       MOV     DPL,?V0 + 0
   \   000064   85..83       MOV     DPH,?V0 + 1
   \   000067   A3           INC     DPTR
   \   000068   A3           INC     DPTR
   \   000069   E0           MOVX    A,@DPTR
   \   00006A   F9           MOV     R1,A
   \   00006B   12....       LCALL   ??SampleApp_HandleKeys?relay
   \   00006E   80BE         SJMP    ??SampleApp_ProcessEvent_4
   \                     ??SampleApp_ProcessEvent_6:
   \   000070                ; Setup parameters for call to function SampleApp_MessageMSGCB
   \   000070   AA..         MOV     R2,?V0 + 0
   \   000072   AB..         MOV     R3,?V0 + 1
   \   000074   12....       LCALL   ??SampleApp_MessageMSGCB?relay
   \   000077   80B5         SJMP    ??SampleApp_ProcessEvent_4
    329              }
    330          
    331              // return unprocessed events
    332              return (events ^ SYS_EVENT_MSG);
   \                     ??SampleApp_ProcessEvent_5:
   \   000079   EE           MOV     A,R6
   \   00007A   FA           MOV     R2,A
   \   00007B   EF           MOV     A,R7
   \   00007C   6480         XRL     A,#0x80
   \                     ??SampleApp_ProcessEvent_8:
   \   00007E   FB           MOV     R3,A
   \   00007F   802A         SJMP    ??SampleApp_ProcessEvent_9
    333            }
    334          
    335            // Send a message out - This event is generated by a timer
    336            //  (setup in SampleApp_Init()).
    337            if ( events & SAMPLEAPP_SEND_PERIODIC_MSG_EVT )
   \                     ??SampleApp_ProcessEvent_0:
   \   000081   EE           MOV     A,R6
   \   000082   A2E0         MOV     C,0xE0 /* A   */.0
   \   000084   5021         JNC     ??SampleApp_ProcessEvent_10
    338            {
    339              // Send the periodic message
    340              //SampleApp_SendPeriodicMessage();
    341              SampleApp_Send_P2P_Message();
   \   000086                ; Setup parameters for call to function SampleApp_Send_P2P_Message
   \   000086   12....       LCALL   ??SampleApp_Send_P2P_Message?relay
    342          
    343              // Setup to send message again in normal period (+ a little jitter)
    344              osal_start_timerEx( SampleApp_TaskID, SAMPLEAPP_SEND_PERIODIC_MSG_EVT,
    345                  (SAMPLEAPP_SEND_PERIODIC_MSG_TIMEOUT + (osal_rand() & 0x00FF)) );
   \   000089                ; Setup parameters for call to function osal_rand
   \   000089   12....       LCALL   ??osal_rand?relay
   \   00008C                ; Setup parameters for call to function osal_start_timerEx
   \   00008C   EA           MOV     A,R2
   \   00008D   24B8         ADD     A,#-0x48
   \   00008F   FC           MOV     R4,A
   \   000090   E4           CLR     A
   \   000091   340B         ADDC    A,#0xb
   \   000093   FD           MOV     R5,A
   \   000094   7A01         MOV     R2,#0x1
   \   000096   7B00         MOV     R3,#0x0
   \   000098   90....       MOV     DPTR,#SampleApp_TaskID
   \   00009B   E0           MOVX    A,@DPTR
   \   00009C   F9           MOV     R1,A
   \   00009D   12....       LCALL   ??osal_start_timerEx?relay
    346          
    347              // return unprocessed events
    348              return (events ^ SAMPLEAPP_SEND_PERIODIC_MSG_EVT);
   \   0000A0   EE           MOV     A,R6
   \   0000A1   6401         XRL     A,#0x1
   \   0000A3   FA           MOV     R2,A
   \   0000A4   EF           MOV     A,R7
   \   0000A5   80D7         SJMP    ??SampleApp_ProcessEvent_8
    349            }
    350          
    351            // Discard unknown events
    352            return 0;
   \                     ??SampleApp_ProcessEvent_10:
   \   0000A7   7A00         MOV     R2,#0x0
   \   0000A9   7B00         MOV     R3,#0x0
   \                     ??SampleApp_ProcessEvent_9:
   \   0000AB                REQUIRE ?Subroutine0
   \   0000AB                ; // Fall through to label ?Subroutine0
    353          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   7F04         MOV     R7,#0x4
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
    354          
    355          /*********************************************************************
    356           * Event Generation Functions
    357           */
    358          /*********************************************************************
    359           * @fn      SampleApp_HandleKeys
    360           *
    361           * @brief   Handles all key events for this device.
    362           *
    363           * @param   shift - true if in shift/alt.
    364           * @param   keys - bit field for key events. Valid entries:
    365           *                 HAL_KEY_SW_2
    366           *                 HAL_KEY_SW_1
    367           *
    368           * @return  none
    369           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    370          void SampleApp_HandleKeys( uint8 shift, uint8 keys )
   \                     SampleApp_HandleKeys:
    371          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
    372            (void)shift;  // Intentionally unreferenced parameter
    373            
    374            if ( keys & HAL_KEY_SW_1 )
   \   000007   A2E0         MOV     C,0xE0 /* A   */.0
   \   000009   5007         JNC     ??SampleApp_HandleKeys_0
    375            {
    376              /* This key sends the Flash Command is sent to Group 1.
    377               * This device will not receive the Flash Command from this
    378               * device (even if it belongs to group 1).
    379               */
    380              SampleApp_SendFlashMessage( SAMPLEAPP_FLASH_DURATION );
   \   00000B                ; Setup parameters for call to function SampleApp_SendFlashMessage
   \   00000B   7AE8         MOV     R2,#-0x18
   \   00000D   7B03         MOV     R3,#0x3
   \   00000F   12....       LCALL   ??SampleApp_SendFlashMessage?relay
    381            }
    382          
    383            if ( keys & HAL_KEY_SW_2 )
   \                     ??SampleApp_HandleKeys_0:
   \   000012   EE           MOV     A,R6
   \   000013   A2E1         MOV     C,0xE0 /* A   */.1
   \   000015   5024         JNC     ??SampleApp_HandleKeys_1
    384            {
    385              /* The Flashr Command is sent to Group 1.
    386               * This key toggles this device in and out of group 1.
    387               * If this device doesn't belong to group 1, this application
    388               * will not receive the Flash command sent to group 1.
    389               */
    390              aps_Group_t *grp;
    391              grp = aps_FindGroup( SAMPLEAPP_ENDPOINT, SAMPLEAPP_FLASH_GROUP );
    392              if ( grp )
   \   000017                ; Setup parameters for call to function aps_FindGroup
   \   000017   7A01         MOV     R2,#0x1
   \   000019   7B00         MOV     R3,#0x0
   \   00001B   7914         MOV     R1,#0x14
   \   00001D   12....       LCALL   ??aps_FindGroup?relay
   \   000020   8B..         MOV     ?V0 + 1,R3
   \   000022   EA           MOV     A,R2
   \   000023   45..         ORL     A,?V0 + 1
   \   000025   600B         JZ      ??SampleApp_HandleKeys_2
    393              {
    394                // Remove from the group
    395                aps_RemoveGroup( SAMPLEAPP_ENDPOINT, SAMPLEAPP_FLASH_GROUP );
   \   000027                ; Setup parameters for call to function aps_RemoveGroup
   \   000027   7A01         MOV     R2,#0x1
   \   000029   7B00         MOV     R3,#0x0
   \   00002B   7914         MOV     R1,#0x14
   \   00002D   12....       LCALL   ??aps_RemoveGroup?relay
   \   000030   8009         SJMP    ??SampleApp_HandleKeys_1
    396              }
    397              else
    398              {
    399                // Add to the flash group
    400                aps_AddGroup( SAMPLEAPP_ENDPOINT, &SampleApp_Group );
   \                     ??SampleApp_HandleKeys_2:
   \   000032                ; Setup parameters for call to function aps_AddGroup
   \   000032   7A..         MOV     R2,#SampleApp_Group & 0xff
   \   000034   7B..         MOV     R3,#(SampleApp_Group >> 8) & 0xff
   \   000036   7914         MOV     R1,#0x14
   \   000038   12....       LCALL   ??aps_AddGroup?relay
    401              }
    402            }
    403          }
   \                     ??SampleApp_HandleKeys_1:
   \   00003B   02....       LJMP    ??Subroutine5_0 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine5_0:
   \   000000   7F02         MOV     R7,#0x2
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
    404          
    405          /*********************************************************************
    406           * LOCAL FUNCTIONS
    407           */
    408          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    409          void SetBuzzer(uint8 on)
   \                     SetBuzzer:
    410          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    411            if(on>0)
   \   000000   E9           MOV     A,R1
   \   000001   6004         JZ      ??SetBuzzer_0
    412            {
    413              P0_7=0;
   \   000003   C287         CLR     0x80.7
   \   000005   8002         SJMP    ??SetBuzzer_1
    414            }
    415            else
    416            {
    417              P0_7=1;    
   \                     ??SetBuzzer_0:
   \   000007   D287         SETB    0x80.7
    418            }
    419          }
   \                     ??SetBuzzer_1:
   \   000009   02....       LJMP    ?BRET
   \   00000C                REQUIRE _A_P0
    420          
    421          /*********************************************************************
    422           * @fn      SampleApp_MessageMSGCB
    423           *
    424           * @brief   Data message processor callback.  This function processes
    425           *          any incoming data - probably from other devices.  So, based
    426           *          on cluster ID, perform the intended action.
    427           *
    428           * @param   none
    429           *
    430           * @return  none
    431           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    432          void SampleApp_MessageMSGCB( afIncomingMSGPacket_t *pkt )
   \                     SampleApp_MessageMSGCB:
    433          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 40
   \   000005   74D8         MOV     A,#-0x28
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
    434            uint16 flashTime;
    435            uint8 buff[40]={0};
   \   00000A   85..82       MOV     DPL,?XSP + 0
   \   00000D   85..83       MOV     DPH,?XSP + 1
   \   000010   AC82         MOV     R4,DPL
   \   000012   AD83         MOV     R5,DPH
   \   000014   7583..       MOV     DPH,#(`?<Constant {0}>` >> 8) & 0xff
   \   000017   7582..       MOV     DPL,#`?<Constant {0}>` & 0xff
   \   00001A   7428         MOV     A,#0x28
   \   00001C   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    436            uint8 index=0,temp=0, humidity=0;
    437            uint8 bAlarm=0;
   \   00001F   FE           MOV     R6,A
    438          
    439            switch ( pkt->clusterId )
   \   000020   8A82         MOV     DPL,R2
   \   000022   8B83         MOV     DPH,R3
   \   000024   A3           INC     DPTR
   \   000025   A3           INC     DPTR
   \   000026   A3           INC     DPTR
   \   000027   A3           INC     DPTR
   \   000028   E0           MOVX    A,@DPTR
   \   000029   F5..         MOV     ?V0 + 0,A
   \   00002B   A3           INC     DPTR
   \   00002C   E0           MOVX    A,@DPTR
   \   00002D   F5..         MOV     ?V0 + 1,A
   \   00002F   78..         MOV     R0,#?V0 + 0
   \   000031   12....       LCALL   ?US_SWITCH_DENSE
   \                     `?<Jumptable for SampleApp_MessageMSGCB>_0`:
   \   000034   0200         DW        2
   \   000036   02           DB        2
   \   000037   ....         DW        ??SampleApp_MessageMSGCB_0
   \   000039   ....         DW        ??SampleApp_MessageMSGCB_1
   \   00003B   ....         DW        ??SampleApp_MessageMSGCB_0
   \   00003D   ....         DW        ??SampleApp_MessageMSGCB_2
    440            {
    441              case SAMPLEAPP_P2P_CLUSTERID:
    442          
    443                index=pkt->cmd.Data[0];//È¡³öÖÕ¶ËµÄË÷ÒıºÅ
   \                     ??SampleApp_MessageMSGCB_2:
   \   00003F   12....       LCALL   ?Subroutine3 & 0xFFFF
   \                     ??CrossCallReturnLabel_2:
   \   000042   E0           MOVX    A,@DPTR
   \   000043   F5..         MOV     ?V0 + 1,A
    444                temp=pkt->cmd.Data[1]; //È¡ÎÂ¶È
   \   000045   A3           INC     DPTR
   \   000046   E0           MOVX    A,@DPTR
   \   000047   F5..         MOV     ?V0 + 0,A
    445                humidity=pkt->cmd.Data[2]; //È¡Êª¶È
   \   000049   8882         MOV     DPL,R0
   \   00004B   8983         MOV     DPH,R1
   \   00004D   A3           INC     DPTR
   \   00004E   A3           INC     DPTR
   \   00004F   E0           MOVX    A,@DPTR
   \   000050   FF           MOV     R7,A
    446                
    447                //¸ñÊ½»¯ÏÔÊ¾µÄÊı¾İ
    448                sprintf(buff, "%dÎÂ:%02d Êª:%02d", index, temp, humidity);
                               ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char *"
   \   000051                ; Setup parameters for call to function sprintf
   \   000051   8F..         MOV     ?V0 + 2,R7
   \   000053   8E..         MOV     ?V0 + 3,R6
   \   000055   78..         MOV     R0,#?V0 + 2
   \   000057   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00005A   85....       MOV     ?V0 + 2,?V0 + 0
   \   00005D   78..         MOV     R0,#?V0 + 2
   \   00005F   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000062   85....       MOV     ?V0 + 2,?V0 + 1
   \   000065   78..         MOV     R0,#?V0 + 2
   \   000067   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00006A   7C..         MOV     R4,#`?<Constant "%d\\316\\302:%02d \\312\\252:%02d">` & 0xff
   \   00006C   7D..         MOV     R5,#(`?<Constant "%d\\316\\302:%02d \\312\\252:%02d">` >> 8) & 0xff
   \   00006E   7406         MOV     A,#0x6
   \   000070   12....       LCALL   ?XSTACK_DISP0_8
   \   000073   AA82         MOV     R2,DPL
   \   000075   AB83         MOV     R3,DPH
   \   000077   12....       LCALL   ??sprintf?relay
   \   00007A   7406         MOV     A,#0x6
   \   00007C   12....       LCALL   ?DEALLOC_XSTACK8
    449                      
    450                if(index==1)
   \   00007F   7401         MOV     A,#0x1
   \   000081   65..         XRL     A,?V0 + 1
   \   000083   7004         JNZ     ??SampleApp_MessageMSGCB_3
    451                {
    452                  //ÖÕ¶Ë1ÏÔÊ¾ÔÚµÚ¶şĞĞ
    453                  HalLcdWriteString( buff, HAL_LCD_LINE_2 );  
                                            ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char *"
   \   000085                ; Setup parameters for call to function HalLcdWriteString
   \   000085   7902         MOV     R1,#0x2
   \   000087   8012         SJMP    ??SampleApp_MessageMSGCB_4
    454                }
    455                else if(index==2)
   \                     ??SampleApp_MessageMSGCB_3:
   \   000089   7402         MOV     A,#0x2
   \   00008B   65..         XRL     A,?V0 + 1
   \   00008D   7004         JNZ     ??SampleApp_MessageMSGCB_5
    456                {
    457                  //ÖÕ¶Ë2ÏÔÊ¾ÔÚµÚÈıĞĞ
    458                  HalLcdWriteString( buff, HAL_LCD_LINE_3 );
                                            ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char *"
   \   00008F                ; Setup parameters for call to function HalLcdWriteString
   \   00008F   7903         MOV     R1,#0x3
   \   000091   8008         SJMP    ??SampleApp_MessageMSGCB_4
    459                }
    460                else if(index==3)
   \                     ??SampleApp_MessageMSGCB_5:
   \   000093   7403         MOV     A,#0x3
   \   000095   65..         XRL     A,?V0 + 1
   \   000097   700F         JNZ     ??SampleApp_MessageMSGCB_6
    461                {
    462                  //ÖÕ¶Ë3ÏÔÊ¾ÔÚµÚËÄĞĞ
    463                  HalLcdWriteString( buff, HAL_LCD_LINE_4 );
                                            ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char *"
   \   000099                ; Setup parameters for call to function HalLcdWriteString
   \   000099   7904         MOV     R1,#0x4
   \                     ??SampleApp_MessageMSGCB_4:
   \   00009B   85..82       MOV     DPL,?XSP + 0
   \   00009E   85..83       MOV     DPH,?XSP + 1
   \   0000A1   AA82         MOV     R2,DPL
   \   0000A3   AB83         MOV     R3,DPH
   \   0000A5   12....       LCALL   ??HalLcdWriteString?relay
    464                }
    465                
    466                //´®¿ÚÊä³ö
    467                HalUARTWrite(0, buff, osal_strlen(buff)); //Êä³ö½ÓÊÕµ½µÄÊı¾İ
                                                         ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char *"
   \                     ??SampleApp_MessageMSGCB_6:
   \   0000A8                ; Setup parameters for call to function HalUARTWrite
   \   0000A8                ; Setup parameters for call to function osal_strlen
   \   0000A8   12....       LCALL   ?Subroutine2 & 0xFFFF
    468                HalUARTWrite(0, "\n", 1); 
    469                
    470                //±¨¾¯
    471                
    472                //ÎÂ¶È³¬¹ıÉÏÏŞ±¨¾¯
    473                if(temp>tempLimit)
   \                     ??CrossCallReturnLabel_0:
   \   0000AB   90....       MOV     DPTR,#tempLimit
   \   0000AE   E0           MOVX    A,@DPTR
   \   0000AF   C3           CLR     C
   \   0000B0   95..         SUBB    A,?V0 + 0
   \   0000B2   5001         JNC     ??SampleApp_MessageMSGCB_7
    474                {
    475                  bAlarm=1;
   \   0000B4   0E           INC     R6
    476                }
    477                
    478                //Êª¶ÈµÍÓÚÏÂÏŞ±¨¾¯
    479                if(humidity>humLimit)
   \                     ??SampleApp_MessageMSGCB_7:
   \   0000B5   90....       MOV     DPTR,#humLimit
   \   0000B8   E0           MOVX    A,@DPTR
   \   0000B9   C3           CLR     C
   \   0000BA   9F           SUBB    A,R7
   \   0000BB   4005         JC      ??SampleApp_MessageMSGCB_8
    480                {
    481                  bAlarm=1;
    482                }
    483                
    484                //ÉèÖÃ·äÃùÆ÷±¨¾¯
    485                if(bAlarm>0)
   \   0000BD   EE           MOV     A,R6
   \   0000BE   A2E0         MOV     C,0xE0 /* A   */.0
   \   0000C0   5007         JNC     ??SampleApp_MessageMSGCB_9
    486                {
    487                  SetBuzzer(1); 
   \                     ??SampleApp_MessageMSGCB_8:
   \   0000C2                ; Setup parameters for call to function SetBuzzer
   \   0000C2   7901         MOV     R1,#0x1
   \                     ??SampleApp_MessageMSGCB_10:
   \   0000C4   12....       LCALL   ??SetBuzzer?relay
   \   0000C7   802F         SJMP    ??SampleApp_MessageMSGCB_0
    488                }
    489                else
    490                {
    491                  SetBuzzer(0); 
   \                     ??SampleApp_MessageMSGCB_9:
   \   0000C9                ; Setup parameters for call to function SetBuzzer
   \   0000C9   7900         MOV     R1,#0x0
   \   0000CB   80F7         SJMP    ??SampleApp_MessageMSGCB_10
    492                }    
    493                
    494                break;    
    495              case SAMPLEAPP_PERIODIC_CLUSTERID:
    496                break;
    497          
    498              case SAMPLEAPP_FLASH_CLUSTERID:
    499                flashTime = BUILD_UINT16(pkt->cmd.Data[1], pkt->cmd.Data[2] );
    500                HalLedBlink( HAL_LED_4, 4, 50, (flashTime / 4) );
   \                     ??SampleApp_MessageMSGCB_1:
   \   0000CD   12....       LCALL   ?Subroutine3 & 0xFFFF
   \                     ??CrossCallReturnLabel_3:
   \   0000D0   A3           INC     DPTR
   \   0000D1   E0           MOVX    A,@DPTR
   \   0000D2   FA           MOV     R2,A
   \   0000D3   8882         MOV     DPL,R0
   \   0000D5   8983         MOV     DPH,R1
   \   0000D7   A3           INC     DPTR
   \   0000D8   A3           INC     DPTR
   \   0000D9   E0           MOVX    A,@DPTR
   \   0000DA   F9           MOV     R1,A
   \   0000DB   EA           MOV     A,R2
   \   0000DC   2400         ADD     A,#0x0
   \   0000DE   F5..         MOV     ?V0 + 0,A
   \   0000E0   E4           CLR     A
   \   0000E1   39           ADDC    A,R1
   \   0000E2   F5..         MOV     ?V0 + 1,A
   \   0000E4   7402         MOV     A,#0x2
   \   0000E6   78..         MOV     R0,#?V0 + 0
   \   0000E8   12....       LCALL   ?US_SHR
   \   0000EB   AC..         MOV     R4,?V0 + 0
   \   0000ED   AD..         MOV     R5,?V0 + 1
   \   0000EF   7B32         MOV     R3,#0x32
   \   0000F1   7A04         MOV     R2,#0x4
   \   0000F3   7908         MOV     R1,#0x8
   \   0000F5   12....       LCALL   ??HalLedBlink?relay
    501                break;
    502            }
    503          }
   \                     ??SampleApp_MessageMSGCB_0:
   \   0000F8   7428         MOV     A,#0x28
   \   0000FA   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000FD   02....       LJMP    ?Subroutine0 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   EA           MOV     A,R2
   \   000001   2421         ADD     A,#0x21
   \   000003   F582         MOV     DPL,A
   \   000005   EB           MOV     A,R3
   \   000006   3400         ADDC    A,#0x0
   \   000008   F583         MOV     DPH,A
   \   00000A   E0           MOVX    A,@DPTR
   \   00000B   F8           MOV     R0,A
   \   00000C   A3           INC     DPTR
   \   00000D   E0           MOVX    A,@DPTR
   \   00000E   F9           MOV     R1,A
   \   00000F                ; Setup parameters for call to function HalLedBlink
   \   00000F   8882         MOV     DPL,R0
   \   000011   8983         MOV     DPH,R1
   \   000013   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   85..82       MOV     DPL,?XSP + 0
   \   000003   85..83       MOV     DPH,?XSP + 1
   \   000006   AA82         MOV     R2,DPL
   \   000008   AB83         MOV     R3,DPH
   \   00000A   12....       LCALL   ??osal_strlen?relay
   \   00000D   EA           MOV     A,R2
   \   00000E   FC           MOV     R4,A
   \   00000F   EB           MOV     A,R3
   \   000010   FD           MOV     R5,A
   \   000011   85..82       MOV     DPL,?XSP + 0
   \   000014   85..83       MOV     DPH,?XSP + 1
   \   000017   AA82         MOV     R2,DPL
   \   000019   AB83         MOV     R3,DPH
   \   00001B   7900         MOV     R1,#0x0
   \   00001D   12....       LCALL   ??HalUARTWrite?relay
   \   000020                ; Setup parameters for call to function HalUARTWrite
   \   000020                ; Setup parameters for call to function HalUARTWrite
   \   000020   7C01         MOV     R4,#0x1
   \   000022   7D00         MOV     R5,#0x0
   \   000024   7A..         MOV     R2,#`?<Constant "\\n">` & 0xff
   \   000026   7B..         MOV     R3,#(`?<Constant "\\n">` >> 8) & 0xff
   \   000028   7900         MOV     R1,#0x0
   \   00002A   12....       LCALL   ??HalUARTWrite?relay
   \   00002D   22           RET
    504          
    505          /*********************************************************************
    506           * @fn      SampleApp_SendPeriodicMessage
    507           *
    508           * @brief   Send the periodic message.
    509           *
    510           * @param   none
    511           *
    512           * @return  none
    513           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    514          void SampleApp_SendPeriodicMessage( void )
   \                     SampleApp_SendPeriodicMessage:
    515          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
    516            if ( AF_DataRequest( &SampleApp_Periodic_DstAddr, &SampleApp_epDesc,
    517                                 SAMPLEAPP_PERIODIC_CLUSTERID,
    518                                 1,
    519                                 (uint8*)&SampleAppPeriodicCounter,
    520                                 &SampleApp_TransID,
    521                                 AF_DISCV_ROUTE,
    522                                 AF_DEFAULT_RADIUS ) == afStatus_SUCCESS )
   \   000005                ; Setup parameters for call to function AF_DataRequest
   \   000005   75..1E       MOV     ?V0 + 0,#0x1e
   \   000008   78..         MOV     R0,#?V0 + 0
   \   00000A   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00000D   75....       MOV     ?V0 + 0,#SampleApp_TransID & 0xff
   \   000010   75....       MOV     ?V0 + 1,#(SampleApp_TransID >> 8) & 0xff
   \   000013   78..         MOV     R0,#?V0 + 0
   \   000015   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000018   75....       MOV     ?V0 + 0,#SampleAppPeriodicCounter & 0xff
   \   00001B   75....       MOV     ?V0 + 1,#(SampleAppPeriodicCounter >> 8) & 0xff
   \   00001E   78..         MOV     R0,#?V0 + 0
   \   000020   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000023   75..01       MOV     ?V0 + 0,#0x1
   \   000026   75..00       MOV     ?V0 + 1,#0x0
   \   000029   78..         MOV     R0,#?V0 + 0
   \   00002B   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00002E   78..         MOV     R0,#?V0 + 0
   \   000030   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000033   7920         MOV     R1,#0x20
   \   000035   7C..         MOV     R4,#SampleApp_epDesc & 0xff
   \   000037   7D..         MOV     R5,#(SampleApp_epDesc >> 8) & 0xff
   \   000039   7A..         MOV     R2,#SampleApp_Periodic_DstAddr & 0xff
   \   00003B   7B..         MOV     R3,#(SampleApp_Periodic_DstAddr >> 8) & 0xff
   \   00003D   12....       LCALL   ??AF_DataRequest?relay
   \   000040   7409         MOV     A,#0x9
   \   000042   02....       LJMP    ?Subroutine1 & 0xFFFF
    523            {
    524            }
    525            else
    526            {
    527              // Error occurred in request to send.
    528            }
    529          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   12....       LCALL   ?DEALLOC_XSTACK8
   \   000003                REQUIRE ??Subroutine5_0
   \   000003                ; // Fall through to label ??Subroutine5_0
    530          
    531          /*********************************************************************
    532           * @fn      SampleApp_SendFlashMessage
    533           *
    534           * @brief   Send the flash message to group 1.
    535           *
    536           * @param   flashTime - in milliseconds
    537           *
    538           * @return  none
    539           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    540          void SampleApp_SendFlashMessage( uint16 flashTime )
   \                     SampleApp_SendFlashMessage:
    541          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 3
   \   000005   74FD         MOV     A,#-0x3
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
    542            uint8 buffer[3];
    543            buffer[0] = (uint8)(SampleAppFlashCounter++);
   \   00000A   90....       MOV     DPTR,#SampleAppFlashCounter
   \   00000D   12....       LCALL   ?Subroutine4 & 0xFFFF
   \                     ??CrossCallReturnLabel_4:
   \   000010   90....       MOV     DPTR,#SampleAppFlashCounter
   \   000013   E0           MOVX    A,@DPTR
   \   000014   04           INC     A
   \   000015   F0           MOVX    @DPTR,A
    544            buffer[1] = LO_UINT16( flashTime );
   \   000016   7401         MOV     A,#0x1
   \   000018   12....       LCALL   ?XSTACK_DISP0_8
   \   00001B   EA           MOV     A,R2
   \   00001C   F0           MOVX    @DPTR,A
    545            buffer[2] = HI_UINT16( flashTime );
   \   00001D   7402         MOV     A,#0x2
   \   00001F   12....       LCALL   ?XSTACK_DISP0_8
   \   000022   EB           MOV     A,R3
   \   000023   F0           MOVX    @DPTR,A
    546          
    547            if ( AF_DataRequest( &SampleApp_Flash_DstAddr, &SampleApp_epDesc,
    548                                 SAMPLEAPP_FLASH_CLUSTERID,
    549                                 3,
    550                                 buffer,
    551                                 &SampleApp_TransID,
    552                                 AF_DISCV_ROUTE,
    553                                 AF_DEFAULT_RADIUS ) == afStatus_SUCCESS )
   \   000024                ; Setup parameters for call to function AF_DataRequest
   \   000024   75..1E       MOV     ?V0 + 0,#0x1e
   \   000027   78..         MOV     R0,#?V0 + 0
   \   000029   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00002C   75....       MOV     ?V0 + 0,#SampleApp_TransID & 0xff
   \   00002F   75....       MOV     ?V0 + 1,#(SampleApp_TransID >> 8) & 0xff
   \   000032   78..         MOV     R0,#?V0 + 0
   \   000034   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000037   7403         MOV     A,#0x3
   \   000039   12....       LCALL   ?XSTACK_DISP0_8
   \   00003C   8582..       MOV     ?V0 + 0,DPL
   \   00003F   8583..       MOV     ?V0 + 1,DPH
   \   000042   78..         MOV     R0,#?V0 + 0
   \   000044   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000047   75..03       MOV     ?V0 + 0,#0x3
   \   00004A   75..00       MOV     ?V0 + 1,#0x0
   \   00004D   78..         MOV     R0,#?V0 + 0
   \   00004F   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000052   75..02       MOV     ?V0 + 0,#0x2
   \   000055   78..         MOV     R0,#?V0 + 0
   \   000057   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00005A   7920         MOV     R1,#0x20
   \   00005C   7C..         MOV     R4,#SampleApp_epDesc & 0xff
   \   00005E   7D..         MOV     R5,#(SampleApp_epDesc >> 8) & 0xff
   \   000060   7A..         MOV     R2,#SampleApp_Flash_DstAddr & 0xff
   \   000062   7B..         MOV     R3,#(SampleApp_Flash_DstAddr >> 8) & 0xff
   \   000064   12....       LCALL   ??AF_DataRequest?relay
   \   000067   7409         MOV     A,#0x9
   \   000069   12....       LCALL   ?DEALLOC_XSTACK8
    554            {
    555            }
    556            else
    557            {
    558              // Error occurred in request to send.
    559            }
    560          }
   \   00006C   7403         MOV     A,#0x3
   \   00006E   02....       LJMP    ?Subroutine1 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine4:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   85..82       MOV     DPL,?XSP + 0
   \   000004   85..83       MOV     DPH,?XSP + 1
   \   000007   F0           MOVX    @DPTR,A
   \   000008   22           RET
    561          
    562          /*********************************************************************
    563           * @fn      SampleApp_Send_P2P_Message
    564           *
    565           * @brief   point to point.
    566           *
    567           * @param   none
    568           *
    569           * @return  none
    570           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    571          void SampleApp_Send_P2P_Message( void )
   \                     SampleApp_Send_P2P_Message:
    572          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 50
   \   000005   74CE         MOV     A,#-0x32
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
    573            uint8 strTemp[50]={0};
   \   00000A   85..82       MOV     DPL,?XSP + 0
   \   00000D   85..83       MOV     DPH,?XSP + 1
   \   000010   AC82         MOV     R4,DPL
   \   000012   AD83         MOV     R5,DPH
   \   000014   7583..       MOV     DPH,#(`?<Constant {0}>_1` >> 8) & 0xff
   \   000017   7582..       MOV     DPL,#`?<Constant {0}>_1` & 0xff
   \   00001A   7432         MOV     A,#0x32
   \   00001C   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    574            uint8 temp=0; //±£´æÎÂ¶È
    575            uint8 humidity=0;//±£´æÊª¶È
    576            
    577            DHT11();             //»ñÈ¡ÎÂÊª¶È
   \   00001F                ; Setup parameters for call to function DHT11
   \   00001F   12....       LCALL   ??DHT11?relay
    578          
    579            temp=wendu_shi*10+wendu_ge;//¸ù¾İÊ®Î»ºÍ¸öÎ»¼ÆËãÎÂ¶È
   \   000022   75F00A       MOV     B,#0xa
   \   000025   90....       MOV     DPTR,#wendu_shi
   \   000028   E0           MOVX    A,@DPTR
   \   000029   A4           MUL     AB
   \   00002A   7583..       MOV     DPH,#(wendu_ge >> 8) & 0xff
   \   00002D   7582..       MOV     DPL,#wendu_ge & 0xff
   \   000030   F8           MOV     R0,A
   \   000031   E0           MOVX    A,@DPTR
   \   000032   28           ADD     A,R0
   \   000033   FF           MOV     R7,A
    580            humidity=shidu_shi*10+shidu_ge;//¸ù¾İÊ®Î»ºÍ¸öÎ»¼ÆËãÊª¶È
   \   000034   75F00A       MOV     B,#0xa
   \   000037   90....       MOV     DPTR,#shidu_shi
   \   00003A   E0           MOVX    A,@DPTR
   \   00003B   A4           MUL     AB
   \   00003C   7583..       MOV     DPH,#(shidu_ge >> 8) & 0xff
   \   00003F   7582..       MOV     DPL,#shidu_ge & 0xff
   \   000042   F8           MOV     R0,A
   \   000043   E0           MOVX    A,@DPTR
   \   000044   28           ADD     A,R0
   \   000045   FE           MOV     R6,A
    581              
    582            //ÏÔÊ¾µ±Ç°ÖÕ¶Ë
    583            sprintf(strTemp, "ÖÕ¶Ë%d", deviceID);
                           ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char *"
   \   000046                ; Setup parameters for call to function sprintf
   \   000046   90....       MOV     DPTR,#deviceID
   \   000049   E0           MOVX    A,@DPTR
   \   00004A   F5..         MOV     ?V0 + 0,A
   \   00004C   75..00       MOV     ?V0 + 1,#0x0
   \   00004F   78..         MOV     R0,#?V0 + 0
   \   000051   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000054   7C..         MOV     R4,#`?<Constant "\\326\\325\\266\\313%d">` & 0xff
   \   000056   7D..         MOV     R5,#(`?<Constant "\\326\\325\\266\\313%d">` >> 8) & 0xff
   \   000058   7402         MOV     A,#0x2
   \   00005A   12....       LCALL   ?XSTACK_DISP0_8
   \   00005D   AA82         MOV     R2,DPL
   \   00005F   AB83         MOV     R3,DPH
   \   000061   12....       LCALL   ??sprintf?relay
   \   000064   7402         MOV     A,#0x2
   \   000066   12....       LCALL   ?DEALLOC_XSTACK8
    584            HalLcdWriteString( strTemp, HAL_LCD_LINE_3 );
                                      ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char *"
   \   000069                ; Setup parameters for call to function HalLcdWriteString
   \   000069   7903         MOV     R1,#0x3
   \   00006B   85..82       MOV     DPL,?XSP + 0
   \   00006E   85..83       MOV     DPH,?XSP + 1
   \   000071   AA82         MOV     R2,DPL
   \   000073   AB83         MOV     R3,DPH
   \   000075   12....       LCALL   ??HalLcdWriteString?relay
    585          
    586            //¸ñÊ½»¯ÎÂÊª¶ÈÍ¬£¬²¢LCDÏÔÊ¾
    587            sprintf(strTemp, "ÎÂ¶È:%02 Êª¶È:%02", temp, humidity);
                           ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char *"
   \   000078                ; Setup parameters for call to function sprintf
   \   000078   8E..         MOV     ?V0 + 0,R6
   \   00007A   78..         MOV     R0,#?V0 + 0
   \   00007C   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00007F   8F..         MOV     ?V0 + 0,R7
   \   000081   78..         MOV     R0,#?V0 + 0
   \   000083   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000086   7C..         MOV     R4,#`?<Constant "\\316\\302\\266\\310:%02 \\312\\252\\266\\` & 0xff
   \   000088   7D..         MOV     R5,#(`?<Constant "\\316\\302\\266\\310:%02 \\312\\252\\266\\` >> 8) & 0xff
   \   00008A   7404         MOV     A,#0x4
   \   00008C   12....       LCALL   ?XSTACK_DISP0_8
   \   00008F   AA82         MOV     R2,DPL
   \   000091   AB83         MOV     R3,DPH
   \   000093   12....       LCALL   ??sprintf?relay
   \   000096   7404         MOV     A,#0x4
   \   000098   12....       LCALL   ?DEALLOC_XSTACK8
    588            HalLcdWriteString( strTemp, HAL_LCD_LINE_4 );
                                      ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char *"
   \   00009B                ; Setup parameters for call to function HalLcdWriteString
   \   00009B   7904         MOV     R1,#0x4
   \   00009D   85..82       MOV     DPL,?XSP + 0
   \   0000A0   85..83       MOV     DPH,?XSP + 1
   \   0000A3   AA82         MOV     R2,DPL
   \   0000A5   AB83         MOV     R3,DPH
   \   0000A7   12....       LCALL   ??HalLcdWriteString?relay
    589          
    590            //´®¿ÚÊä³öÊı¾İ
    591            HalUARTWrite(0,strTemp,osal_strlen(strTemp));
                                                      ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char *"
   \   0000AA                ; Setup parameters for call to function HalUARTWrite
   \   0000AA                ; Setup parameters for call to function osal_strlen
   \   0000AA   12....       LCALL   ?Subroutine2 & 0xFFFF
    592            HalUARTWrite(0, "\n",1);
    593          
    594            //¸ñÊ½»¯Êı¾İ£¬ÓÃÓÚÎŞÏß·¢ËÍ
    595            strTemp[0]=deviceID;//Ôö¼ÓÖÕ¶ËµÄIDµ½ÎŞÏßĞÅÏ¢ÉÏ
   \                     ??CrossCallReturnLabel_1:
   \   0000AD   90....       MOV     DPTR,#deviceID
   \   0000B0   12....       LCALL   ?Subroutine4 & 0xFFFF
    596            strTemp[1]=temp;//ÎÂ¶È
   \                     ??CrossCallReturnLabel_5:
   \   0000B3   7401         MOV     A,#0x1
   \   0000B5   12....       LCALL   ?XSTACK_DISP0_8
   \   0000B8   EF           MOV     A,R7
   \   0000B9   F0           MOVX    @DPTR,A
    597            strTemp[2]=humidity;//Êª¶È
   \   0000BA   7402         MOV     A,#0x2
   \   0000BC   12....       LCALL   ?XSTACK_DISP0_8
   \   0000BF   EE           MOV     A,R6
   \   0000C0   F0           MOVX    @DPTR,A
    598            
    599            
    600            
    601            if ( AF_DataRequest( &SampleApp_P2P_DstAddr, &SampleApp_epDesc,
    602                                 SAMPLEAPP_P2P_CLUSTERID,
    603                                 3, //·¢ËÍ³¤¶È
    604                                 strTemp,//·¢ËÍÖ¸Õë
    605                                 &SampleApp_TransID,
    606                                 AF_DISCV_ROUTE,
    607                                 AF_DEFAULT_RADIUS ) == afStatus_SUCCESS )
   \   0000C1                ; Setup parameters for call to function AF_DataRequest
   \   0000C1   75..1E       MOV     ?V0 + 0,#0x1e
   \   0000C4   78..         MOV     R0,#?V0 + 0
   \   0000C6   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0000C9   75....       MOV     ?V0 + 0,#SampleApp_TransID & 0xff
   \   0000CC   75....       MOV     ?V0 + 1,#(SampleApp_TransID >> 8) & 0xff
   \   0000CF   78..         MOV     R0,#?V0 + 0
   \   0000D1   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000D4   7403         MOV     A,#0x3
   \   0000D6   12....       LCALL   ?XSTACK_DISP0_8
   \   0000D9   8582..       MOV     ?V0 + 0,DPL
   \   0000DC   8583..       MOV     ?V0 + 1,DPH
   \   0000DF   78..         MOV     R0,#?V0 + 0
   \   0000E1   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000E4   75..03       MOV     ?V0 + 0,#0x3
   \   0000E7   75..00       MOV     ?V0 + 1,#0x0
   \   0000EA   78..         MOV     R0,#?V0 + 0
   \   0000EC   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000EF   75..04       MOV     ?V0 + 0,#0x4
   \   0000F2   78..         MOV     R0,#?V0 + 0
   \   0000F4   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000F7   7920         MOV     R1,#0x20
   \   0000F9   7C..         MOV     R4,#SampleApp_epDesc & 0xff
   \   0000FB   7D..         MOV     R5,#(SampleApp_epDesc >> 8) & 0xff
   \   0000FD   7A..         MOV     R2,#SampleApp_P2P_DstAddr & 0xff
   \   0000FF   7B..         MOV     R3,#(SampleApp_P2P_DstAddr >> 8) & 0xff
   \   000101   12....       LCALL   ??AF_DataRequest?relay
   \   000104   7409         MOV     A,#0x9
   \   000106   12....       LCALL   ?DEALLOC_XSTACK8
    608            {
    609            }
    610            else
    611            {
    612              // Error occurred in request to send.
    613            }
    614          }
   \   000109   7432         MOV     A,#0x32
   \   00010B                REQUIRE ?Subroutine1
   \   00010B                ; // Fall through to label ?Subroutine1

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for deviceID>`:
   \   000000   01           DB 1

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for tempLimit>`:
   \   000000   23           DB 35

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for humLimit>`:
   \   000000   32           DB 50

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_ProcessEvent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_ProcessEvent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_HandleKeys?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_HandleKeys

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SetBuzzer?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SetBuzzer

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_MessageMSGCB?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_MessageMSGCB

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_SendPeriodicMessage?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_SendPeriodicMessage

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_SendFlashMessage?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_SendFlashMessage

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??SampleApp_Send_P2P_Message?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    SampleApp_Send_P2P_Message

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Group 1">`:
   \   000000   47726F75     DB "Group 1"
   \            70203100

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "SampleApp">`:
   \   000000   53616D70     DB "SampleApp"
   \            6C654170
   \            7000    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {0}>`:
   \   000000   00           DB 0
   \   000001   00000000     DB 0, 0, 0, 0, 0, 0, 0, 0
   \            00000000
   \   000009   00000000     DB 0, 0, 0, 0, 0, 0, 0, 0
   \            00000000
   \   000011   00000000     DB 0, 0, 0, 0, 0, 0, 0, 0
   \            00000000
   \   000019   00000000     DB 0, 0, 0, 0, 0, 0, 0, 0
   \            00000000
   \   000021   00000000     DB 0, 0, 0, 0, 0, 0, 0
   \            000000  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "%d\\316\\302:%02d \\312\\252:%02d">`:
   \   000000   2564CEC2     DB "%d\316\302:%02d \312\252:%02d"
   \            3A253032
   \            6420CAAA
   \            3A253032
   \            6400    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "\\n">`:
   \   000000   0A00         DB "\012"

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {0}>_1`:
   \   000000   00           DB 0
   \   000001   00000000     DB 0, 0, 0, 0, 0, 0, 0, 0
   \            00000000
   \   000009   00000000     DB 0, 0, 0, 0, 0, 0, 0, 0
   \            00000000
   \   000011   00000000     DB 0, 0, 0, 0, 0, 0, 0, 0
   \            00000000
   \   000019   00000000     DB 0, 0, 0, 0, 0, 0, 0, 0
   \            00000000
   \   000021   00000000     DB 0, 0, 0, 0, 0, 0, 0, 0
   \            00000000
   \   000029   00000000     DB 0, 0, 0, 0, 0, 0, 0, 0
   \            00000000
   \   000031   00           DB 0

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "\\326\\325\\266\\313%d">`:
   \   000000   D6D5B6CB     DB "\326\325\266\313%d"
   \            256400  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "\\316\\302\\266\\310:%02 \\312\\252\\266\\`:
   \   000000   CEC2B6C8     DB "\316\302\266\310:%02 \312\252\266\310:%02"
   \            3A253032
   \            20CAAAB6
   \            C83A2530
   \            3200    
    615          /*********************************************************************
    616          *********************************************************************/

   Maximum stack usage in bytes:

     Function                       ISTACK PSTACK XSTACK
     --------                       ------ ------ ------
     SampleApp_HandleKeys               0      0     22
       -> SampleApp_SendFlashMessage
                                        0      0     20
       -> aps_FindGroup                 0      0     20
       -> aps_RemoveGroup               0      0     20
       -> aps_AddGroup                  0      0     20
     SampleApp_Init                     0      0     14
       -> MT_UartInit                   0      0     22
       -> MT_UartRegisterTaskID         0      0     22
       -> SetBuzzer                     0      0     22
       -> afRegister                    0      0     22
       -> RegisterForKeys               0      0     22
       -> osal_memcpy                   0      0     28
       -> aps_AddGroup                  0      0     22
       -> HalLcdWriteString             0      0     22
     SampleApp_MessageMSGCB             2      0     70
       -> sprintf                       0      0    116
       -> HalLcdWriteString             0      0    104
       -> HalLcdWriteString             0      0    104
       -> HalLcdWriteString             0      0    104
       -> osal_strlen                   0      0    104
       -> HalUARTWrite                  0      0    104
       -> HalUARTWrite                  0      0    104
       -> SetBuzzer                     0      0    104
       -> SetBuzzer                     0      0    104
       -> HalLedBlink                   0      0    104
     SampleApp_ProcessEvent             0      0     12
       -> osal_msg_receive              0      0     24
       -> osal_start_timerEx            0      0     24
       -> osal_msg_deallocate           0      0     24
       -> osal_msg_receive              0      0     24
       -> SampleApp_HandleKeys          0      0     24
       -> SampleApp_MessageMSGCB        0      0     24
       -> SampleApp_Send_P2P_Message
                                        0      0     24
       -> osal_rand                     0      0     24
       -> osal_start_timerEx            0      0     24
     SampleApp_SendFlashMessage         1      0     32
       -> AF_DataRequest                0      0     44
     SampleApp_SendPeriodicMessage      0      0     19
       -> AF_DataRequest                0      0     38
     SampleApp_Send_P2P_Message         2      0     81
       -> DHT11                         0      0    120
       -> sprintf                       0      0    124
       -> HalLcdWriteString             0      0    120
       -> sprintf                       0      0    128
       -> HalLcdWriteString             0      0    120
       -> osal_strlen                   0      0    120
       -> HalUARTWrite                  0      0    120
       -> HalUARTWrite                  0      0    120
       -> AF_DataRequest                0      0    138
     SetBuzzer                          0      0     52


   Segment part sizes:

     Function/Label                                 Bytes
     --------------                                 -----
     _A_P0                                             1
     P0SEL                                             1
     P0DIR                                             1
     SampleApp_ClusterList                             4
     SampleApp_SimpleDesc                             12
     SampleApp_epDesc                                  6
     SampleApp_TaskID                                  1
     SampleApp_NwkState                                1
     SampleApp_TransID                                 1
     SampleApp_Periodic_DstAddr                       12
     SampleApp_Flash_DstAddr                          12
     SampleApp_P2P_DstAddr                            12
     SampleApp_Group                                  18
     SampleAppPeriodicCounter                          1
     SampleAppFlashCounter                             1
     deviceID                                          1
     tempLimit                                         1
     humLimit                                          1
     SampleApp_Init                                  196
     SampleApp_ProcessEvent                          171
     ?Subroutine0                                      5
     SampleApp_HandleKeys                             62
     ??Subroutine5_0                                   5
     SetBuzzer                                        12
     SampleApp_MessageMSGCB                          256
     ?Subroutine3                                     20
     ?Subroutine2                                     46
     SampleApp_SendPeriodicMessage                    69
     ?Subroutine1                                      3
     SampleApp_SendFlashMessage                      113
     ?Subroutine4                                      9
     SampleApp_Send_P2P_Message                      267
     ?<Initializer for deviceID>                       1
     ?<Initializer for tempLimit>                      1
     ?<Initializer for humLimit>                       1
     ??SampleApp_Init?relay                            6
     ??SampleApp_ProcessEvent?relay                    6
     ??SampleApp_HandleKeys?relay                      6
     ??SetBuzzer?relay                                 6
     ??SampleApp_MessageMSGCB?relay                    6
     ??SampleApp_SendPeriodicMessage?relay             6
     ??SampleApp_SendFlashMessage?relay                6
     ??SampleApp_Send_P2P_Message?relay                6
     ?<Constant "Group 1">                             8
     ?<Constant "SampleApp">                          10
     ?<Constant {0}>                                  40
     ?<Constant "%d\316\302:%02d \312\252:%02d">      18
     ?<Constant "\n">                                  2
     ?<Constant {0}>_1                                50
     ?<Constant "\326\325\266\313%d">                  7
     ?<Constant "\316\302\266\310:%02 \312\252\266\   18

 
 1 234 bytes in segment BANKED_CODE
    48 bytes in segment BANK_RELAYS
     3 bytes in segment SFR_AN
     3 bytes in segment XDATA_I
     3 bytes in segment XDATA_ID
   169 bytes in segment XDATA_ROM_C
    65 bytes in segment XDATA_Z
 
 1 285 bytes of CODE  memory
   169 bytes of CONST memory
     0 bytes of DATA  memory (+ 3 bytes shared)
    68 bytes of XDATA memory

Errors: none
Warnings: 10
